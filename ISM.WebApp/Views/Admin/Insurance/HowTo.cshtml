@using Microsoft.AspNetCore.Http;
@using Newtonsoft.Json;
@using ISM.WebApp.Constant;
@using ISM.WebApp.Utils
@{
    var sessionUser = JsonConvert.DeserializeObject<Account>(Context.Session.GetString(LoginConst.SessionKeyName));
    if (sessionUser.role_name == "Admin")
    {
        ViewData["Title"] = "How To Page";
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else if (sessionUser.role_name == "Staff")
    {
        ViewData["Title"] = "How To Page";
        Layout = "~/Views/Shared/_StaffLayout.cshtml";
    }
}
<h1 style="text-align: center;">Insurance Instruction</h1>
<div style="height: 50px;">
    <br>
    <br>
    <form asp-controller="Insurance" asp-action="HowToPost" method="post" enctype="multipart/form-data" style="margin-bottom:20px">
        <label for="uploadFile">Select a PDF file:</label>
        <input type="file" name="uploadFile" accept="application/pdf">
        <input type="submit" value="Save" />
    </form>
    @*<div class="top-bar">
            <button class="btn" id="prev-page">
                <i class="fas fa-arrow-circle-left"></i> Prev Page
            </button>
            <button class="btn" id="next-page">
                Next Page <i class="fas fa-arrow-circle-right"></i>
            </button>
            <span class="page-info">
                Page <span id="page-num"></span> of <span id="page-count"></span>
            </span>
        </div>*@
    @*<canvas id="pdf-render" style="width:70%;"></canvas>*@
</div>
<br />
<br />
<div class="top-bar">
    <button class="btn" id="prev-page">
        <i class="fas fa-arrow-circle-left"></i> Prev Page
    </button>
    <button class="btn" id="next-page">
        Next Page <i class="fas fa-arrow-circle-right"></i>
    </button>
    <span class="page-info">
        Page <span id="page-num"></span> of <span id="page-count"></span>
    </span>
</div>
<br />
<canvas id="pdf-render" style="width:100%;"></canvas>
<script>

    const url = '../Article/HowTo.pdf?' + performance.now();

    let pdfDoc = null,
        pageNum = 1,
        pageIsRendering = false,
        pageNumIsPending = null;

    const scale = 3,
        canvas = document.getElementById('pdf-render'),
        ctx = canvas.getContext('2d');

    // Render the page
    const renderPage = num => {
        pageIsRendering = true;
        // Get page
        pdfDoc.getPage(num).then(page => {
            // Set scale
            const viewport = page.getViewport({ scale });
            canvas.height = viewport.height;
            canvas.width = viewport.width;

            const renderCtx = {
                canvasContext: ctx,
                viewport
            };

            page.render(renderCtx).promise.then(() => {
                pageIsRendering = false;

                if (pageNumIsPending !== null) {
                    renderPage(pageNumIsPending);
                    pageNumIsPending = null;
                }
            });

            // Output current page
            document.getElementById('page-num').textContent = num;
        });
    };

    // Check for pages rendering
    const queueRenderPage = num => {
        if (pageIsRendering) {
            pageNumIsPending = num;
        } else {
            renderPage(num);
        }
    };

    // Show Prev Page
    const showPrevPage = () => {
        if (pageNum <= 1) {
            return;
        }
        pageNum--;
        queueRenderPage(pageNum);
    };

    // Show Next Page
    const showNextPage = () => {
        if (pageNum >= pdfDoc.numPages) {
            return;
        }
        pageNum++;
        queueRenderPage(pageNum);
    };

    // Get Document
    pdfjsLib
        .getDocument(url)
        .promise.then(pdfDoc_ => {
            pdfDoc = pdfDoc_;

            document.querySelector('#page-count').textContent = pdfDoc.numPages;

            renderPage(pageNum);
        })
        .catch(err => {
            // Display error
            const div = document.createElement('div');
            div.className = 'error';
            div.appendChild(document.createTextNode(err.message));
            document.querySelector('body').insertBefore(div, canvas);
            // Remove top bar
            document.querySelector('.top-bar').style.display = 'none';
        });

    // Button Events
    document.querySelector('#prev-page').addEventListener('click', showPrevPage);
    document.querySelector('#next-page').addEventListener('click', showNextPage);

</script>